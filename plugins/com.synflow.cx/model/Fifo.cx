/*
 * This file is part of the ngDesign SDK.
 *
 * Copyright (c) 2019 Synflow SAS.
 *
 * ngDesign is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ngDesign is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ngDesign.  If not, see <https://www.gnu.org/licenses/>.
 *
 */

 package std.fifo;

task SynchronousFIFO {

	properties {
		implementation: {
			type: "builtin",
			dependencies: ["std.mem.PseudoDualPortRAM"]
		}
	}

	const int size, width, depth = sizeof(size - 1);

	sync ready {
		in unsigned<width> din;
		out unsigned<width> dout;
	}
}

task AsynchronousFIFO {

	properties {
		clocks: ["din_clock", "dout_clock"],
		implementation: {
			type: "builtin",
			dependencies: [
				"com.synflow.fifo.FIFO_Flag_Async",
				"com.synflow.fifo.FIFO_Read_Controller",
				"com.synflow.fifo.FIFO_Write_Controller",
				"com.synflow.fifo.FIFO_Flag_Controller",
				"std.mem.DualPortRAM"
			]
		},
		domains: {
			din_clock:  ["din", "din_rdy"],
			dout_clock: ["readFifo", "dout", "readFifo_rdy"]
		}
	}

	const int size, width, depth = sizeof(size - 1);

	sync ready {
		in unsigned<width> din;
		out unsigned<width> dout;
	}
}
