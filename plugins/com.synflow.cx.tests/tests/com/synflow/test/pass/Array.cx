/*******************************************************************************
 * Copyright (c) 2012-2014 Synflow SAS.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Matthieu Wipliez
 *    Nicolas Siret
 *******************************************************************************/
package com.synflow.test.pass.array;

task ArrayTest1 {
	properties {
		test: {inp: [ 1, 2, 3, 4 ], outp: [ 2, 3, 4, 5 ] }
	}

	sync { in u3 inp; out u8 outp; }

	u8 tab[4];
	u2 i;

	void loop() {
		u3 d = inp.read();
		tab[i] = d;
		outp.write((u3) (tab[i] + 1));
		i++;
	}
}

task ArrayTest2 {
	properties {
		num_states: 0, num_transitions: 1,
		test: {inp: [ 1, 2, 3, 4, 0, 1, 2, 3, 4 ], outp: [ 0, 0, 0, 0, 1, 2, 3, 4, 0 ] }
	}

	in u8 inp; out u8 outp;

	u8 tab[4];
	u2 i;

	void loop() {
		outp.write(tab[i]);
		tab[i] = inp.read();
		i++;
	}
}

task ArrayTest3 {
	properties {
		test: {inp: [ 1 ], outp: [ 11 ] }
	}

	in u3 inp;
	out u8 outp;

	u8 tab[4] = { 1, 2, 3, 4 };

	void loop() {
		u8 x = (u8) (inp.read() + tab[0] + tab[1] + tab[2] + tab[3]);
		outp.write(x);
	}
}

task ArrayTest4 {
	properties {
		test: {
			inp:  [    1,    2,    3,    4, null, null, null,    0,    1,    2, 3, null, null, null ],
			outp: [ null, null, null,    1,    2,    3,    4, null, null, null, 0,    1,    2,    3 ]
		}
	}

	sync {
	  in u8 inp; out u8 outp;
	}

	u2 i;

	void loop() {
		u8 tab[4];
	
		tab[0] = inp.read();
		tab[1] = inp.read();
		tab[2] = inp.read();
		tab[3] = inp.read();
	
		outp.write(tab[i]);
		i++;
		outp.write(tab[i]);
		i++;
		outp.write(tab[i]);
		i++;
		outp.write(tab[i]);
		i++;
	}
}

task ArrayTest5 {
	properties {
		test: {i: [ 0, 1, 2 ], j: [ 1, 0, 3 ], outp: [ null, null, 70 ] }
	}

	in u2 i, sync u3 j;
	
	// 1 + 10 + 23 + 36
	
	out sync u8 outp;
	
	const u6 tab[4][8] = {
		{ 0,   1,  2,  3,  4,  5,  6, 0 },
		{ 10, 11, 12, 13, 14, 15, 16, 0 },
		{ 20, 21, 22, 23, 24, 25, 26, 0 },
		{ 30, 31, 32, 33, 34, 35, 36, 0 }
	};
	
	u7 sum;

	void loop() {
		sum += tab[i.read][j.read];
		sum += tab[i.read][j.read];
		sum += tab[i.read][j.read];
		sum += tab[3][6];
		outp.write(sum);
	}
}

task ArrayTest6 {
	properties {
		test: {i: [ 0, 1, 2 ], j: [ 0, 0, 1 ], k: [ 6, 1, 0 ], outp: [ null, null, 10 ] }
	}

	in u2 i;
	sync {
	  in u3 j, k; out u8 outp;
	}
	
	const u6 tab[8][2][2] = {
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } },
		{ { 1, 2 }, { 3, 4 } }
	};
	
	u7 sum;

	void loop() {
		sum += tab[i.read][j.read][k.read];
		sum += tab[i.read][j.read][k.read];
		sum += tab[i.read][j.read][k.read];
		sum += tab[3][1][1];
		outp.write(sum);
	}
}

task ArrayTest7 {
	properties {
		test: {outp: [ 10 ] }
	}

	out sync u8 outp;

	void loop() {
		u8 tab[4];
		tab[0] = 1;
		tab[1] = 2;
		tab[2] = 3;
		tab[3] = 4;
		outp.write((u8) (tab[0] + tab[1] + tab[2] + tab[3]));
	}
}

task ArrayTest8 {
	properties {
		test: {inp: [ 3, 2, 1, 0 ], outp: [ 1, 2, 3, 5 ] }
	}

	sync {
		in i5 inp; out u8 outp;
	}

	u8 tab[4] = { 5, 3, 2, 1 };

	void loop() {
		outp.write(tab[inp.read]);
	}
}
